name: CD

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Deployment Status
        run: |
          echo "✅ Build completed successfully!"
          echo "🚀 Ready for deployment setup:"
          echo ""
          echo "📝 Vercel Setup Required:"
          echo "   1. Import GitHub repo to Vercel"
          echo "   2. Add environment variables"
          echo "   3. Configure GitHub secrets for auto-deployment"
          echo ""
          echo "📝 Supabase Setup Required:"
          echo "   1. Run database schema in SQL Editor"
          echo "   2. Configure authentication settings"
          echo ""
          echo "🎯 All code is ready - just needs manual deployment setup!"

      # Vercel deployment will be enabled after manual setup
      # - name: Deploy Web App to Vercel
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     working-directory: ./apps/web
      #     vercel-args: '--prod'
      #     github-comment: true

      - name: Deploy Supabase Edge Functions
        if: github.ref == 'refs/heads/main'
        run: |
          echo "🚀 Supabase Edge Functions deployment will be configured in Task 1.4"
          echo "📝 Requires: SUPABASE_ACCESS_TOKEN and SUPABASE_PROJECT_REF secrets"
        # Future Supabase deployment steps will be added in Task 1.4

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    
    steps:
      - name: Deployment Status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Deployment pipeline ready for configuration"
            echo "📝 Next: Set up Vercel and Supabase integrations"
          else
            echo "❌ Build pipeline failed"
            exit 1
          fi 